기본 자세 관련 질문

- 작업 완료한 페이지에 대해 어떤식으로 점검을 하는지?

- 일이 많고 프로젝트가 중복이 된 상태에서 일정을 꼭 맞춰야 할때 본인이 생각할때 가장 좋은 방법은?

- 프론트엔드이 아닌 퍼블리셔 작업을 할건데 어떻게 생각하는지

- 디자이너나 개발과 커뮤니케이션 할때 힘들었던 점은?

- 우리 회사는 인터렉션이 들어간 작업이 많은데 CSS 애니메이션이나 그밖에 애니메이션 작업을 어느정도 해봤는지

- 모바일 쪽 작업이 많은데 모바일 작업할때 힘들었던 적은?

- 스크립트를 구현시에 라이브러리를 가져다가 사용을 하는 비율과 직접 짜는 비율이 어느정인지

- 지금껏 작업 하면서 제일 힘들었던 프로젝트와 그 이유 반대로 제일 뿌듯했던 프로젝트와 그 이유에 대해서


기술 질문

- 문서 doctype을 꼭 사용해야 하는 이유는?
웹 페이지의 문서 유형을 설정하기 위해 사용.
설정하지 않거나 잘못 설정하면 브라우저에 따라 화면이 다르게 나오거나
렌더링이 달라지기 때문에 독타입을 설정해야함

- display:inline과 block의 차이점?
inline은 텍스트 요소, block은 박스 영역의 요소

- :after, :before는 언제 사용하는 것인지?
마크업 수정없이 또 다른 요소를 줄때

- margin과 padding의 차이점
margin은 영역 바깥으로 값을 주고, padding은 영역 안쪽으로 값을 주는데
padding은 크기에 영향을 줘 가로&세로를 잡을때 padding 값을 -하여 잡아야 한다

- 이미지를 html태그와 css를 통해 구현 하는 방법의 차이는?
html태그는 의미가 있는 중요한 이미지일 경우 alt를 설정하기 위해 사용
css는 의미가 없는 단순 이미지일 경우 css를 통해 구현

- CSS 프로퍼티 순서를 두는지? 둔다면 그 이유는?
위치선정 > 윤곽 > 외곽 디테일링 > 채색 > 타이포 순서 (모질라에서 선언한 순서)
이렇다고 정해진 것은 아니지만 유지보수 측면에서 룰을 정해 사용하는것이 좋음

- position:relative는 언제 사용하나?
absolute의 기준점이 필요할때
z-index를 사용하고 싶은데 포지션이 없으면 인식이 안되므로
relative를 사용해 z-index값을 인식시킬 수 있음

- 폰트 단위 px, em, rem 단위의 차이
px은 고정되어야 하는 값을 설정할때
em은 부모 태그의 폰트 사이즈를 기준으로 계산이되 부모 요소에 영향 받아 한번 수정하면 수정할게 많음
rem은 html 폰트 사이즈를 기준으로 계산하여 전체적으로 폰트 사이즈를 변경할때 좋음

- 웹폰트 사용시에 local방식와 cdn 방식중에 어떤 방식을 선호하는지 그 이유에 대해서
local은 서버에 파일을 저장해 페이지 로드시에 불어와서 적용하는 방식으로
장점은 인터넷이 안좋거나 안되거나 해도 페이지를 볼때 폰트가 적용되어 볼 수 있음 단점은 트래픽이 많아져 사이트가 느려질수 있음
cdn 방식은 인터넷에서 파일을 불러와 적용하는 방식
장점은 트래픽이 좀 덜 먹어 사이트가 크게 느려지지는 않음 단점은 인터넷이 안되는 환경에선 폰트가 깨져보일 수 있음

- 이미지 컷팅 할때 이미지 스프라이트를 사용하는지 그냥 하나씩 컷팅해서 저장하는지 이미지 스프라이트의 장점은?
이미지 스프라이트란 여러개의 이미지를 하나의 이미지로 합쳐서 관리하는 것
이미지를 여러개로 나누다 보면 서버에 이미지를 여러번 요청하게 되 느려질 수 있음
이미지 스프라이트는 서버에 요청을 단 몇번으로 줄일 수 있어 웹 페이지의 로딩 시간을 단축시킬 수 있다

- SASS의 장점과 사용시에 어떤식으로 구성해서 사용하는지
css를 여러개로 쪼개 import시켜 작업시 편하게 작업이 가능하고
나중에 컴파일된 1개의 스타일만 서버에 올리면 되서 편함
반복적으로 사용하는 css를 함수화 시켜 필요한 부분에 include 하면되 작업 시간을 단축 시킬 수 있다

- git을 사용해봤는지 사용할때의 장/단점을 무엇인지
장점 파일을 공유하기가 편하고 작업한 사람의 이력관리도 되고
현재 작업하다가 파일이 삭제가 되고 복구 할수 있다
단점 적응하는데 시간이 좀 걸리고 기본 셋팅하는데 환경에 따라 오류가 나는 경우가 많음

- 반응형과 적응형 페이지의 차이점?
반응형은 브라우저를 줄이고 늘릴때마다 정해놓은 사이즈에 따라 페이지의 형태가 변하는 방식
적응형은 pc or mo 환경에 따라 페이지가 다르게 보이는 방식 pc에선 mo 버전을 확인 할 수 없다

- 인터랙션 구현시에 트랜지션과 애니메이션의 차이
트랜지션은 일정기간동안 변화가 일어남, 자동으로 발생하진 않고 event 동작에 따라 발생
애니메이션은 트랜지션보다 할수 있는 것들이 많음. 시작, 정지, 반복을 제어 할수 있음

- 라이브러리 종류 사용 정도가 어느정도인지?
fullpage.js (홈페이지 작업할때 제일 많이 사용하는 라이브러리)
slick.js (pc에서 슬라이드 작업할때 사용)
swiper.js (모바일에서 슬라이드 할때 사용)
datepicker (달력 작업시)
chart.js (차트 작업할때)

- fullpage.js 사용시 반응형 홈페이지를 만들때 문제점은 무엇인가? (fullpage.js를 사용해봤을 경우)
pc에서 mo로 전환할때 fullpage.js에서 다양한 스크립트 에러가 발생
pc에서 모션을 사용했을때 mo에서도 실행이 되 mo에서 사용한 모션과 겹치는 경우
pc에선 한 단락씩 이동하는 방식을 사용하다 mo에서 스크롤이 되야할때 스크롤 되는 부분이 제대로 작동을 안함
이외에도 다양한 에러가 있음

- flex를 상용해 컨텐츠 요소를 가운데 오게 하는 방법은?
부모요소에 height값을 설정하고 자식요소에 display: flex; justify-content: center; align-items: center; 사용

- float를 해제할때 가장 좋은 방법은?
:after 선택자를 이용해 content:'';display:block;clear:both 사용

- 반응형 홈페이지 제작시 모바일을 먼저 코딩하는지 PC를 먼저 코딩하는지
모바일 html 먼저 쳐야 pc에서 늘어나는 태그를 수월하게 코딩 할 수 있다
pc를 먼저 치게되면 모바일로 갔을때 숨겨야하는 태그들이 많아 작업 시간이 좀더 걸림

- placeholder ie 지원 범위와 지원하지 않는 브라우저 대처 방법
ie9부터 이하 버전 모두 지원이 안됨
pc에선 jQuery 플러그인을 쓰거나 label을 이용 스크립트로 처리하여 대체하는 방법이 있고
mo에선 css로 처리가 가능

- 모바일에서 width와 padding값을 같이 줄때 계산하지 않고 내가 준 width 값대로만 나오게 하는 방법?
box-sizing:border-box를 이용

- 모바일 폰이 가로로 긴폰 세로로 긴폰이 있는데 레이아웃을 잡을때 이런 폰들은 고려해서 작업해 봤는지 작업 방식은?
여러가지가 있겠지만 가로가 긴폰의 경우 미디어쿼리를 이용해 맞추는 방식이 일반적
세로로 긴폰의 경우 아이폰xr, z플립 같이 많이 큰 경우에는 height 값을 스크립트 체크하여 맞추는 방식을 해볼 수 있다.
어중간하게 길거나 넓은 폰의 경우엔 그 사이즈에 맞추서 따로 잡으면 또 다른 폰에 영향이 갈 수 있어 가급적이면 간격 등으로 맞추는 방법이 좋다.

- 모바일 viewport 설정 하는것과 하지 않는것과의 차이점은?
viewport란 화면상의 표시 영역을 뜻함
데스크탑 기반으로 작업된 웹페이지는 모바일에서 볼때 내용이 압축되어 글씨들이 작아 제대로 안보임
viewport를 이용해 너비를 넣어줌으로써 화면 너비에 맞게 내용을 볼수 있음

- 모바일 viewport중 viewport-fit 이란?
아이폰X 같이 노치(notch)영역에 최적화 하기 위해 필요한 태그로
아이폰X에서 가로모드로 보면 좌우 흰색 영역으로 막혀서 보일때 적절하게 채워서 볼 수 있다.
즉 자동으로 패딩을 들어간 것을 빼고 꽉찬 화면으로 불 수 있게 되는 것

-모바일에서 하단 고정버튼을 둘때 키패드가 노출시 고정된 영역과 겹쳐 입력이 안되거나 하는 사용성에 문제가 있는데 해결방법은?
컨텐츠 영역과 고정버튼이 겹치면 고정버튼에 fix를 풀어서 컨텐츠 영역 밑으로 떨어지게 하여 스크롤 나올 수 있게